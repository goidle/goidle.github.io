{"version":3,"sources":["webpack:///./src/components/elements/hr/index.jsx","webpack:///./src/components/post-title/index.jsx","webpack:///./src/components/post-date/index.jsx","webpack:///./src/components/post-container/index.jsx","webpack:///./src/components/post-navigator/index.jsx","webpack:///./src/components/utterances/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["Hr","React","createElement","className","PostTitle","_ref","title","PostDate","date","moment","fromNow","PostContainer","html","dangerouslySetInnerHTML","__html","PostNavigator","pageContext","previous","next","Link","to","fields","slug","rel","frontmatter","utterances","Utterences","repo","useContext","ThemeContext","isChanged","useRef","rootElm","createRef","useEffect","theme","Storage","Dom","THEME","DARK","current","firstChild","removeChild","document","utterancesConfig","src","branch","async","crossorigin","Object","keys","forEach","configKey","setAttribute","appendChild","ref","data","location","ScrollManager","post","markdownRemark","metaData","site","siteMetadata","comment","Layout","maxWidth","home","Head","description","excerpt","keywords","Elements","Bio"],"mappings":"qOAIO,MAAMA,EAAKA,IAAMC,IAAAC,cAAA,MAAIC,UAAU,c,4BCF/B,MAAMC,EAAYC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKJ,IAAAC,cAAA,UAAKI,I,mCCGtC,MAAMC,EAAWF,IAAe,IAAd,KAAEG,GAAMH,EAC/B,OAAOJ,IAAAC,cAAA,KAAGC,UAAU,aAAaM,IAAOD,GAAME,YCJnCC,EAAgBN,IAAA,IAAC,KAAEO,GAAMP,EAAA,OACpCJ,IAAAC,cAAA,OAAKW,wBAAyB,CAAEC,OAAQF,M,sCCEnC,MAAMG,EAAgBV,IAAsB,IAArB,YAAEW,GAAaX,EAC3C,MAAM,SAAEY,EAAQ,KAAEC,GAASF,EAE3B,OACEf,IAAAC,cAAA,MAAIC,UAAU,aACZF,IAAAC,cAAA,MAAIC,UAAU,aACXc,GACChB,IAAAC,cAACiB,OAAI,CAACC,GAAIH,EAASI,OAAOC,KAAMC,IAAI,QAAO,KACtCN,EAASO,YAAYlB,QAI9BL,IAAAC,cAAA,MAAIC,UAAU,cACXe,GACCjB,IAAAC,cAACiB,OAAI,CAACC,GAAIF,EAAKG,OAAOC,KAAMC,IAAI,QAC7BL,EAAKM,YAAYlB,MAAM,S,oDCTpC,IAAImB,EAAa,KAEV,MAAMC,EAAarB,IAAe,IAAd,KAAEsB,GAAMtB,EACjCuB,qBAAWC,KACX,MAAMC,EAAYC,iBAAO,MACnBC,EAAU/B,IAAMgC,YAwBtB,OAvBAC,oBAAU,KACR,MAAMC,EAXaC,IAAiBC,IAAmBC,IAAMC,OAY7D,GAAGT,EAAUU,UAAYL,EACvB,OAEFL,EAAUU,QAAUL,EACpBH,EAAQQ,QAAQC,YAAcT,EAAQQ,QAAQE,YAAYV,EAAQQ,QAAQC,YAC1EhB,EAAakB,SAASzC,cAAc,UACpC,MAAM0C,EAAmB,CACvBC,IAjBM,gCAkBNlB,OACAmB,OAlBS,SAmBTC,OAAO,EACP,aAAc,WACdC,YAAa,YACbb,MAAOA,EAAQ,cAAgB,gBAEjCc,OAAOC,KAAKN,GAAkBO,QAAQC,IACpC3B,EAAW4B,aAAaD,EAAWR,EAAiBQ,MAEtDpB,EAAQQ,QAAQc,YAAY7B,KAGvBxB,IAAAC,cAAA,OAAKC,UAAU,aAAaoD,IAAKvB,K,0BCxB3B3B,cAAsC,IAArC,KAAEmD,EAAI,YAAExC,EAAW,SAAEyC,GAAUpD,EAC7C6B,oBAAU,KACRwB,MACO,IAAMA,OACZ,IAEH,MAAMC,EAAOH,EAAKI,eACZC,EAAWL,EAAKM,KAAKC,cACrB,MAAEzD,EAAK,QAAE0D,GAAYH,GACrB,WAAEpC,GAAeuC,EAEvB,OACE/D,IAAAC,cAAC+D,IAAM,CAACR,SAAUA,EAAUnD,MAAOA,EAAO4D,SAAU,GAAI/D,UAAU,OAAOgE,MAAM,GAC7ElE,IAAAC,cAACkE,IAAI,CAAC9D,MAAOqD,EAAKnC,YAAYlB,MAAO+D,YAAaV,EAAKW,QAASC,SAAUZ,EAAKnC,YAAY+C,WAC3FtE,IAAAC,cAACE,EAAS,CAACE,MAAOqD,EAAKnC,YAAYlB,QACnCL,IAAAC,cAACK,EAAQ,CAACC,KAAMmD,EAAKnC,YAAYhB,OACjCP,IAAAC,cAACS,EAAa,CAACC,KAAM+C,EAAK/C,OAC1BX,IAAAC,cAACsE,EAAW,MACZvE,IAAAC,cAACuE,IAAG,MACJxE,IAAAC,cAACa,EAAa,CAACC,YAAaA,IAC5Bf,IAAAC,cAACwB,EAAU,CAACC,KAAMF","file":"component---src-templates-blog-post-js-26aea61718c6277f711a.js","sourcesContent":["import React from 'react'\n\nimport './index.scss'\n\nexport const Hr = () => <hr className=\"custom-hr\" />\n","import React from 'react'\n\nexport const PostTitle = ({ title }) => <h1>{title}</h1>\n","import React from 'react'\nimport moment from 'moment';\n\nimport './index.scss'\n\nexport const PostDate = ({ date }) => {\n  return <p className=\"post-date\">{moment(date).fromNow()}</p>\n}","import React from 'react'\n\nexport const PostContainer = ({ html }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nexport const PostNavigator = ({ pageContext }) => {\n  const { previous, next } = pageContext\n\n  return (\n    <ul className=\"navigator\">\n      <li className=\"left_navi\">\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li className=\"right_navi\">\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  )\n}\n","import React, { useEffect, useState, useContext, useRef } from 'react'\nimport { ThemeContext } from '../theme-context';\n\nimport * as Dom from '../../utils/dom'\nimport * as Storage from '../../utils/storage'\nimport { THEME } from '../../constants'\n\nconst getTheme = () => Storage.getTheme(Dom.hasClassOfBody(THEME.DARK));\n\nconst src = 'https://utteranc.es/client.js'\nconst branch = 'master'\nlet utterances = null;\n\nexport const Utterences = ({ repo }) => {\n  useContext(ThemeContext);\n  const isChanged = useRef(null);\n  const rootElm = React.createRef()\n  useEffect(() => {\n    const theme = getTheme();\n    if(isChanged.current === theme) {\n      return;\n    }\n    isChanged.current = theme;\n    rootElm.current.firstChild && rootElm.current.removeChild(rootElm.current.firstChild);\n    utterances = document.createElement('script')\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n      theme: theme ? \"github-dark\" : \"github-light\"\n    }\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  })\n\n  return <div className=\"utterences\" ref={rootElm} />\n}","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport * as Elements from '../components/elements'\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\nimport { PostTitle } from '../components/post-title'\nimport { PostDate } from '../components/post-date'\nimport { PostContainer } from '../components/post-container'\nimport { Bio } from '../components/bio'\nimport { PostNavigator } from '../components/post-navigator'\nimport { Utterences } from '../components/utterances'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title, comment } = metaData\n  const { utterances } = comment\n\n  return (\n    <Layout location={location} title={title} maxWidth={32} className=\"post\" home={true}>\n      <Head title={post.frontmatter.title} description={post.excerpt} keywords={post.frontmatter.keywords} />\n      <PostTitle title={post.frontmatter.title} />\n      <PostDate date={post.frontmatter.date} />\n      <PostContainer html={post.html} />\n      <Elements.Hr />\n      <Bio />\n      <PostNavigator pageContext={pageContext} />\n      <Utterences repo={utterances} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        comment {\n          utterances\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        keywords\n      }\n    }\n  }\n`\n"],"sourceRoot":""}