{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/react-18/","result":{"data":{"site":{"siteMetadata":{"title":"Deep Dive Magic Code","author":"Goidle","comment":{"utterances":"goidle/goidle.github.io"}}},"markdownRemark":{"id":"34735846-28ca-55d6-9a3c-96aece4e76e0","excerpt":"안녕하세요. 마지막 포스팅이 벌써 2년 전이네요. 오랫동안 포스팅이 없음에도 아직도 제 블로그를 찾아주시는 분들이 계시네요😅 드디어 React 18이 공식 배포되었습니다. 1…","html":"<p>안녕하세요. 마지막 포스팅이 벌써 2년 전이네요.<br>\n오랫동안 포스팅이 없음에도 아직도 제 블로그를 찾아주시는 분들이 계시네요😅</p>\n<p>드디어 React 18이 공식 배포되었습니다. 17과 비교해서 내부 동작이 어떻게 굴러가는지 호기심을 자극하는 부분들이 참 많아졌습니다. 서버 사이드를 제외하고 클라이언트 사이드에서 새롭게 도입된 부분들은 대부분 비동기와 밀접하게 연관되어 있습니다. 그래서 이전보다 분석하기가 힘들 것으로 예상돼요..🤣</p>\n<p>다름이 아니라 이 글을 작성하게 된 이유는 이제까지 미루어두었던 React 분석을 다시 시작하기 위해서입니다.<br>\n이런 식으로라도 글을 남겨놓아야 게을러빠진 저 자신이 부지런히 움직일 것 같아서요.</p>\n<p>이번 분석의 목표는 클라이언트 사이드에 도입된 비동기 렌더링입니다.<br>\nReact 18에서 이 부분이 핵심이며 Concurrent, Transition, Suspense 등의 키워드가 모두 이에 포함되어 있습니다.</p>\n<p>사실 작은 부분부터 분석해서 포스팅을 이어나갈 수도 있지만, 여러모로 힘든 부분이 있습니다.<br>\n개발자야 하나의 목표를 위해 코드를 작성하는 데 반해 분석하는 저로서는 반대로 흩어져 있는 코드를 모아 분석해야 하나의 목표가 이해되기 때문입니다.</p>\n<p>초반에 A라고 이해했던 부분들도 나중에는 B라고 이해되기도 하고, 때로는 추가로 명확한 설명이 가능해지는 시점도 있습니다.<br>\n그래서 현업이 있는 헌재 상황에서 언제 글을 작성하게 될지 말씀드리기 어렵습니다. 최소 3달이 걸릴 수도 있고.. 내년이 될 수도 있습니다. 그래도 이렇게 글을 싸질러 놓은 이상 최대한 열심히 분석해 보도록 하겠습니다!</p>\n<p>그럼 분석을 완료하는 그날에 다시 뵙도록 하겠습니다🖐</p>","frontmatter":{"title":"React 18 분석을 시작해보려합니다.","date":"2022-07-08","keywords":["리액트","react"]}}},"pageContext":{"slug":"/react/react-18/","previous":{"fields":{"slug":"/react/in-depth-react-reconciler_5/"},"frontmatter":{"title":"React 톺아보기 - 05. Reconciler_5","category":"react"}},"next":null}},"staticQueryHashes":["2277278352","536400264"]}