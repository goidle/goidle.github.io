{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Deep Dive Magic Code","configs":{"countOfInitialPost":10},"introduction":"오픈소스를 톺아보며 매직 코드라 생각했던 부분들의 동작 원리와 의미, 의도를 파악해보고 서로의 생각을 나누기 위한 블로그"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 포스트별 주제 훅을 통해 컴포넌트 상태를 업데이트한다. 업데이트를 반영할 Work를 scheduler에게 전달하고 scheduler는 스케줄링된 Task를 적절한 시기에 실행한다. …","fields":{"slug":"/react/in-depth-react-reconciler_5/"},"frontmatter":{"date":"2020-10-15","title":"React 톺아보기 - 05. Reconciler_5","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 현재 분석을 1 ~ 5 업데이트된 컴포넌트를 호출하여 반환받은 element를 fiber로 확장까지 진행하였습니다. 그리고 이 fiber는 reconcileChildren()에서 반…","fields":{"slug":"/react/in-depth-react-reconciler_4/"},"frontmatter":{"date":"2020-10-15","title":"React 톺아보기 - 05. Reconciler_4","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 6 - 6 reconcileChildren() 재조정 작업의 목적은 VDOM 트리에서 변경이 발생한 부분을 효과적으로 비교하여 새로운 트리를 만들어내는 것입니다. 이때 효과적이란 최…","fields":{"slug":"/react/in-depth-react-reconciler_3/"},"frontmatter":{"date":"2020-10-15","title":"React 톺아보기 - 05. Reconciler_3","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 6. Render phase Render phase는 변경된 상태 값을 반영한 workInProgress 트리 구축 과정을 일컫습니다. Host root부터 업데이트 컴포넌트까지 c…","fields":{"slug":"/react/in-depth-react-reconciler_2/"},"frontmatter":{"date":"2020-10-15","title":"React 톺아보기 - 05. Reconciler_2","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 포스트별 주제 훅을 통해 컴포넌트 상태를 업데이트한다. 업데이트를 반영할 Work를 scheduler에게 전달하고 scheduler는 스케줄링된 Task를 적절한 시기에 실행한다. …","fields":{"slug":"/react/in-depth-react-reconciler_1/"},"frontmatter":{"date":"2020-10-15","title":"React 톺아보기 - 05. Reconciler_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 5. Scheduler_scheduleCallback scheduler는 전달받은 callback을 Task 객체에 담아 관리합니다. 먼저 이 Task의 생김새부터 확인해봅시다. 위…","fields":{"slug":"/react/in-depth-react-scheduler_2/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 04. Scheduler_2","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 포스트별 주제 훅을 통해 컴포넌트 상태를 업데이트한다. 업데이트를 반영할 Work를 scheduler에게 전달하고 scheduler는 스케줄링된 Task를 적절한 시기에 실행한다. …","fields":{"slug":"/react/in-depth-react-scheduler_1/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 04. Scheduler_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 3. 상태가 변경되어 리-렌더될 때 변경된 상태 값은 어떻게 가지고 오는 것일까? 3 - 1 상태를 담은 훅 객체 불러오기 컴포넌트 마운트 이후 우리가 작성한 useState()는 …","fields":{"slug":"/react/in-depth-react-hooks_2/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 03. Hooks_2","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 각 포스트의 주제는 다음과 같이 리액트의 일반적인 흐름을 따라가도록 구성되었습니다. 포스트별 주제 훅을 통해 컴포넌트 상태를 업데이트한다. 업데이트를 반영할 Work를 schedul…","fields":{"slug":"/react/in-depth-react-hooks_1/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 03. Hooks_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 이번 포스트에서는 사전지식을 좀 더 자세하게 다루도록 하겠습니다. Intro에서 언급되는 부분들은 추후에 주제에 맞는 포스트에서 본격적으로 다루므로 가볍게 읽고 지나가시면 됩니다. …","fields":{"slug":"/react/in-depth-react-intro/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 02. Intro","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트와 브라우저 환경을 기준으로 합니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 1. 들어가기에 앞서 먼저 이 시리즈는 리액트 사용법에 대한 글이 아닙니다. 리액트를 통해 프로젝트를 진행한 경험이 있고 동작 방식을 어렴풋이 이해하기는 하지만 여전히 리액트가 마법…","fields":{"slug":"/react/in-depth-react-preview/"},"frontmatter":{"date":"2020-10-11","title":"React 톺아보기 - 01. Preview","category":"react"}}},{"node":{"excerpt":"혹시 궁금해봤니❓ Redux를 사용하면서 다음과 같은 물음을 가진 경험이 있습니까? 나는 액션을 dispatch만 하였는데 redux는 어떻게 알고 뒤에서 middleware를 실행하는 것\n일까? redux는 전달해준 액션을 어떻게 내가 원하는 reducer에 전달해주는 것일까? reducer에서 반환하는 값을 왜 항상 새로 만들어야 하는 것일까? 순수함…","fields":{"slug":"/redux/in-depth-redux/"},"frontmatter":{"date":"2019-12-25","title":"Redux 톺아보기","category":"redux"}}}]}},"pageContext":{}},"staticQueryHashes":["2277278352","536400264"]}