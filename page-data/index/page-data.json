{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Deep Dive Magic Code","configs":{"countOfInitialPost":10},"introduction":"오픈소스를 톺아보며 매직 코드라 생각했던 부분들의 동작 원리와 의미, 의도를 파악해보고 서로의 생각을 나누기 위한 블로그"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 아마 이번 포스터에서 리액트에 대해 궁금증을 가지고 있었던 거의 대부분을 다루지 않을까 생각해봅니다. 그만큼 중추적인 역할을 하는 패키지가 reconciler입니다.   우리는 먼저 JSX로 작성한 컴포넌…","fields":{"slug":"/react/in-depth-react-reconciler_1/"},"frontmatter":{"date":"2020-07-01","title":"React 톺아보기- 05. Reconciler_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 5. Scheduler_scheduleCallback 여기서는 스케줄링에 필요한 정보들을 담은 Task를 만듭니다. 그리고 호스트 환경에 따라 구현된 비동기 api에 Task를 실행하는 함수를 전달합니다.…","fields":{"slug":"/react/in-depth-react-scheduler_2/"},"frontmatter":{"date":"2020-06-23","title":"React 톺아보기- 04. Scheduler_2","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 사용자가 컴포넌트의 상태를 업데이트하기 위해 를 사용했을 때 이 함수에서 에 를 연결하고 마지막에 업데이트를 반영하기 위해 Work를 로 스케줄링시켰습니다. 이번 포스트에서는 를 시작으로 scheduler…","fields":{"slug":"/react/in-depth-react-scheduler_1/"},"frontmatter":{"date":"2020-06-21","title":"React 톺아보기- 04. Scheduler_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 3. Hook은 어떻게 구현되어 있을까? 이전 포스트에 이어서 다음은 update 구현체를 보도록 하겠습니다. update 구현체 1. 훅 객체 가지고 오기 훅의 구현체는 컴포넌트가 마운트된 이후에는 항상…","fields":{"slug":"/react/in-depth-react-hooks_2/"},"frontmatter":{"date":"2020-06-15","title":"React 톺아보기- 03. Hooks_2","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 각 포스트의 주제는 다음과 같이 리액트의 일반적인 흐름을 따라가도록 구성되었습니다. 훅을 통해 컴포넌트 상태를 업데이트한다. VDOM 재조정을 해줄 Work를 scheduler에게 스케줄링 시키고 sche…","fields":{"slug":"/react/in-depth-react-hooks_1/"},"frontmatter":{"date":"2020-06-12","title":"React 톺아보기- 03. Hooks_1","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 이번 포스트에서는 사전지식을 좀 더 자세하게 다루도록 하겠습니다. 위 표는 클래스의 라이프 사이클을 나타내는 표이며 오다가다 많이 보셨을 겁니다. 표 왼쪽을 보면 리액트를 개발하면서 접해보지 못한 단어들이…","fields":{"slug":"/react/in-depth-react-intro/"},"frontmatter":{"date":"2020-06-09","title":"React 톺아보기- 02. Intro","category":"react"}}},{"node":{"excerpt":"모든 설명은 v16.12.0 버전 함수형 컴포넌트 기준입니다. 버전에 따라 코드는 변경될 수 있으며 클래스 컴포넌트는 설명에서 제외됨을 알려 드립니다. 1. 들어가기에 앞서 먼저 이 시리즈는 리액트 사용법에 대한 글이 아닙니다. 리액트를 통해 프로젝트를 진행한 경험이 있고 동작 방식을 어렴풋이 이해하기는 하지만 여전히 리액트가 마법처럼 느껴지고 응용, 에…","fields":{"slug":"/react/in-depth-react-preview/"},"frontmatter":{"date":"2020-06-09","title":"React 톺아보기- 01. Preview","category":"react"}}},{"node":{"excerpt":"혹시 궁금해봤니❓ Redux를 사용하면서 다음과 같은 물음을 가진 경험이 있습니까? 나는 액션을 dispatch만 하였는데 redux는 어떻게 알고 뒤에서 middleware를 실행하는 것\n일까? redux는 전달해준 액션을 어떻게 내가 원하는 reducer에 전달해주는 것일까? reducer에서 반환하는 값을 왜 항상 새로 만들어야 하는 것일까? 순수함…","fields":{"slug":"/redux/in-depth-redux/"},"frontmatter":{"date":"2019-12-25","title":"Redux 톺아보기","category":"redux"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}